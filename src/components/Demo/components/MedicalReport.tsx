import React, { useState } from 'react';
import { Download, ChevronDown, ChevronUp } from 'lucide-react';
import { jsPDF } from 'jspdf';
import { ImageReport } from '../../../types/reports';

interface MedicalReportProps {
  activeSection: string | null;
  report: ImageReport | null;
}

export const MedicalReport: React.FC<MedicalReportProps> = ({ activeSection, report }) => {
  const [expandedSections, setExpandedSections] = useState<Record<string, boolean>>({});

  if (!report) return null;

  const toggleSection = (section: string) => {
    setExpandedSections(prev => ({
      ...prev,
      [section]: !prev[section]
    }));
  };

  const getHighlightClass = (section: string) => {
    return activeSection === section
      ? 'bg-gray-800/50 border-l-4 border-blue-500'
      : '';
  };

  const downloadPDF = () => {
    const doc = new jsPDF();
    
    // Set up fonts and colors
    doc.setFont("helvetica", "bold");
    doc.setFontSize(24);
    doc.setTextColor(44, 62, 80);
    
    // Header
    doc.text("Medical Report", 20, 20);
    doc.setFontSize(12);
    doc.setTextColor(127, 140, 141);
    doc.text(new Date().toLocaleString(), 20, 30);
    
    // Horizontal line
    doc.setDrawColor(236, 240, 241);
    doc.line(20, 35, 190, 35);
    
    // Key Findings Section
    doc.setFont("helvetica", "bold");
    doc.setFontSize(16);
    doc.setTextColor(44, 62, 80);
    doc.text("Key Findings", 20, 45);
    
    let yPos = 55;
    
    // Findings details
    report.report.forEach(finding => {
      if (finding.found) {
        // Section title with confidence
        doc.setFont("helvetica", "bold");
        doc.setFontSize(14);
        doc.setTextColor(52, 73, 94);
        doc.text(`${finding.type.toUpperCase()} (92% confidence)`, 20, yPos);
        yPos += 10;
        
        // Finding details
        doc.setFont("helvetica", "normal");
        doc.setFontSize(12);
        doc.setTextColor(44, 62, 80);
        
        Object.entries(finding).forEach(([key, value]) => {
          if (key !== 'type' && key !== 'found') {
            const formattedKey = key.replace(/_/g, ' ').replace(/\b\w/g, l => l.toUpperCase());
            doc.text(`${formattedKey}: ${value}`, 30, yPos);
            yPos += 8;
          }
        });
        
        yPos += 5;
      }
    });
    
    // Analysis Summary
    yPos += 10;
    doc.setDrawColor(236, 240, 241);
    doc.line(20, yPos, 190, yPos);
    yPos += 10;
    
    doc.setFont("helvetica", "bold");
    doc.setFontSize(14);
    doc.setTextColor(41, 128, 185);
    doc.text("Analysis Summary", 20, yPos);
    yPos += 8;
    
    doc.setFont("helvetica", "normal");
    doc.setFontSize(12);
    doc.setTextColor(44, 62, 80);
    doc.text("Findings suggest further investigation may be required.", 20, yPos);
    yPos += 6;
    doc.text("Recommend follow-up imaging in 6 months.", 20, yPos);
    
    // Footer
    const pageHeight = doc.internal.pageSize.height;
    doc.setFont("helvetica", "italic");
    doc.setFontSize(10);
    doc.setTextColor(127, 140, 141);
    doc.text("Generated by MedSegAI", 20, pageHeight - 20);
    doc.text(new Date().toLocaleDateString(), doc.internal.pageSize.width - 40, pageHeight - 20);
    
    // Save the PDF
    doc.save(`medical-report-${report.id}-${new Date().toISOString().split('T')[0]}.pdf`);
  };

  return (
    <div className="sticky top-24 bg-gray-900 text-gray-100 rounded-lg p-6">
      <div className="flex items-center justify-between mb-6">
        <h2 className="text-xl font-semibold">Medical Report</h2>
        <div className="flex items-center gap-4">
          <span className="text-sm text-gray-400">
            {new Date().toLocaleString()}
          </span>
          <button
            onClick={downloadPDF}
            className="flex items-center gap-2 px-3 py-1.5 bg-blue-600 hover:bg-blue-700 rounded-lg text-sm font-medium transition-colors"
          >
            <Download className="w-4 h-4" />
            PDF Report
          </button>
        </div>
      </div>

      <div className="space-y-2">
        <h3 className="text-lg font-medium mb-4">Key Findings</h3>
        
        {report.report.map((finding, index) => (
          finding.found ? (
            <div
              key={index}
              className={`
                transition-all duration-300 ease-out
                ${getHighlightClass(finding.type)}
              `}
            >
              <button
                onClick={() => toggleSection(finding.type)}
                className="w-full flex items-center justify-between p-3 hover:bg-gray-800/30 rounded-lg"
              >
                <div className="flex items-center gap-2">
                  {expandedSections[finding.type] ? (
                    <ChevronUp className="w-4 h-4 text-gray-400" />
                  ) : (
                    <ChevronDown className="w-4 h-4 text-gray-400" />
                  )}
                  <span className="capitalize">{finding.type}</span>
                </div>
                <span className="text-sm text-amber-500">
                  92% confidence
                </span>
              </button>

              {expandedSections[finding.type] && (
                <div className="px-4 py-3 space-y-2 text-sm text-gray-300 bg-gray-800/20 rounded-lg mt-1 mb-2">
                  {Object.entries(finding).map(([key, value]) => {
                    if (key !== 'type' && key !== 'found') {
                      return (
                        <p key={key} className="flex justify-between">
                          <span className="capitalize">{key.replace(/_/g, ' ')}:</span>
                          <span className="text-gray-100">{value}</span>
                        </p>
                      );
                    }
                    return null;
                  })}
                </div>
              )}
            </div>
          ) : null
        ))}

        <div className="mt-8 p-4 bg-blue-500/10 rounded-lg border border-blue-500/20">
          <h4 className="text-sm font-medium text-blue-400 mb-2">
            Analysis Summary
          </h4>
          <p className="text-sm text-gray-300">
            Findings suggest further investigation may be required. Recommend follow-up imaging in 6 months.
          </p>
        </div>
      </div>
    </div>
  );
};